name: Build and Push Docker Images

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-central-1
      EKS_CLUSTER_NAME: eks-cluster

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build and push dashboard image
      run: |
        docker build -t kevreece/rolloutdashboard:v1.0.0 Dashboard
        docker push kevreece/rolloutdashboard:v1.0.0

    - name: Build and push colour image (blue)
      run: |
        docker build -t kevreece/colour:blue Colour
        docker push kevreece/colour:blue

    - name: Edit colour/index.html to green
      run: |
        echo "green" > Colour/index.html

    - name: Build and push colour image (green)
      run: |
        docker build -t kevreece/colour:green Colour
        docker push kevreece/colour:green

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.9.4

    - name: 'Configure AWS credentials'
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 'Terraform Init prerequisites'
      run: terraform -chdir=terraform-prerequisites init

    - name: 'Terraform Plan prerequisites'
      run: terraform -chdir=terraform-prerequisites plan

    - name: 'Terraform Apply prerequisites'
      run: terraform -chdir=terraform-prerequisites apply -auto-approve

    - name: 'Terraform Init'
      run: terraform -chdir=terraform init

    - name: 'Terraform Plan'
      run: terraform -chdir=terraform plan

    - name: 'Terraform Apply'
      run: terraform -chdir=terraform apply -auto-approve

    - name: Configure kubectl
      run: aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}

    - name: Setup kubectl from kube config
      uses: actions-hub/kubectl@v1.31.0

    - name: Deploy kubernetes CustomResourceDefinitions
      run: kubectl apply -k k8s-manifests/argo-rollouts

    - name: Deploy Argo CD
      run: kubectl apply -k k8s-manifests/overlays/aws -n argocd
